labs(x = "Concentration of DNA in ng/µl", y = "Quality of DNA",
title = "Assessing quality of DNA with Nanodrop")
ggplot(Nanodrop,
aes(x = Nucleic_Acid, y = Quality_260_230)) +
geom_jitter() +
labs(x = "Concentration of DNA in ng/µl", y = "Quality of DNA, 260/230",
title = "Assessing quality of DNA with Nanodrop")
ggplot(Nanodrop %>% filter(Quality_260_230 < 60),
aes(x = Nucleic_Acid, y = Quality_260_230)) +
geom_jitter() +
labs(x = "Concentration of DNA in ng/µl", y = "Quality of DNA, 260/230",
title = "Assessing quality of DNA with Nanodrop")
ggplot(Nanodrop %>%
filter(Quality_260_230 < 2.5, Quality_260_230 > 1.8),
aes(x = Nucleic_Acid, y = Quality_260_230)) +
geom_jitter() +
labs(x = "Concentration of DNA in ng/µl", y = "Quality of DNA, 260/230",
title = "Assessing quality of DNA with Nanodrop")
Nanodrop %>%
filter( Quality_260_280 < 2.5,  Quality_260_280 > 1.5 )
library(ggrepel)
library(dplyr)
library(scales)
library(cowplot)
library(ggthemes)
library(grid)
library(ggplot2)
library(ggpmisc)
library(broom)
library(dplyr)
library(scales)
library(cowplot)
library(ggthemes)
library(cowplot)
library(ggthemes)
library(grid)
library(ggplot2)
library(ggpmisc)
library(broom)
library(knitr)
library(kableExtra)
library(webshot)
library(RColorBrewer)
# read the lab data with pca vectors
lab <- read.csv("Data/Data_output/lab_pca.csv")
# change the labels pc1 and pc2 to PC1 / PC2
lab <- lab %>%
dplyr::rename(PC1 = "pc1", PC2 = "pc2")
# read the variance explained by each gene for the pca
vpg <- read.csv("Data/Data_output/variance_contr_gene_lab.csv")
# Change the first column of the variance contribution of variables to the gene
# names
vpg <- vpg %>%
dplyr::rename(Variable = vars, PC1 = Dim.1, PC2 = Dim.2)
# add cos2 to lab
lab <- lab %>% mutate(cos2 = lab$PC1^2 + lab$PC2^2)
# Define color palette
color_palette <- c("E_ferrisi" = "#66C2A5", "uninfected" = "#8DA0CB", "E_falciformis" = "#FC8D62")
# PCA graph of individuals
ggplot(lab, aes(x = PC1, y = PC2, color = infection, shape = infection)) +
geom_hline(yintercept = 0, linetype = "dotted", color = "gray50") +
geom_vline(xintercept = 0, linetype = "dotted", color = "gray50") +
geom_point(size = 3, alpha = 0.8) +
labs(x = "PC1", y = "PC2", title = "PCA graph of individuals",
colour = "Current infection", shape ="Current infection") +
theme_minimal() +
theme(plot.title = element_text(size = 24, face = "bold"),
axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12),
legend.position = "right") +
scale_color_manual(values = color_palette) +
scale_shape_manual(values = c("E_ferrisi" = 17, "uninfected" = 16, "E_falciformis" = 18)) +
guides(color = guide_legend(override.aes = list(size = 4)))
# Add cos2 variable to the dataframe
vpg$cos2 <- with(vpg, PC1^2 + PC2^2)
# Add specific labels for variables
vpg$Additional_Label[vpg$Variable %in%
c("IFNy", "IL.6", "CASP1", "IDO1", "TNF")] <-
"*"
vpg$Additional_Label[!vpg$Variable %in%
c("IFNy", "IL.6", "CASP1", "IDO1", "TNF")] <-
"none"
vpg$Cytokine_response <- as.factor(vpg$Cytokine_response)
library(ggrepel)
library(dplyr)
library(scales)
library(cowplot)
library(ggthemes)
library(grid)
library(ggplot2)
library(ggpmisc)
library(broom)
library(knitr)
library(kableExtra)
library(webshot)
library(RColorBrewer)
# read the lab data with pca vectors
lab <- read.csv("Data/Data_output/lab_pca.csv")
setwd("GitHub/Article_predicting_WL")
library(ggrepel)
library(dplyr)
library(scales)
library(cowplot)
library(ggthemes)
library(grid)
library(ggplot2)
library(ggpmisc)
library(broom)
library(knitr)
library(kableExtra)
library(webshot)
library(RColorBrewer)
# read the lab data with pca vectors
lab <- read.csv("Data/Data_output/lab_pca.csv")
# change the labels pc1 and pc2 to PC1 / PC2
lab <- lab %>%
dplyr::rename(PC1 = "pc1", PC2 = "pc2")
# read the variance explained by each gene for the pca
vpg <- read.csv("Data/Data_output/variance_contr_gene_lab.csv")
# Change the first column of the variance contribution of variables to the gene
# names
vpg <- vpg %>%
dplyr::rename(Variable = vars, PC1 = Dim.1, PC2 = Dim.2)
# add cos2 to lab
lab <- lab %>% mutate(cos2 = lab$PC1^2 + lab$PC2^2)
# Define color palette
color_palette <- c("E_ferrisi" = "#66C2A5", "uninfected" = "#8DA0CB", "E_falciformis" = "#FC8D62")
# PCA graph of individuals
ggplot(lab, aes(x = PC1, y = PC2, color = infection, shape = infection)) +
geom_hline(yintercept = 0, linetype = "dotted", color = "gray50") +
geom_vline(xintercept = 0, linetype = "dotted", color = "gray50") +
geom_point(size = 3, alpha = 0.8) +
labs(x = "PC1", y = "PC2", title = "PCA graph of individuals",
colour = "Current infection", shape ="Current infection") +
theme_minimal() +
theme(plot.title = element_text(size = 24, face = "bold"),
axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12),
legend.position = "right") +
scale_color_manual(values = color_palette) +
scale_shape_manual(values = c("E_ferrisi" = 17, "uninfected" = 16, "E_falciformis" = 18)) +
guides(color = guide_legend(override.aes = list(size = 4)))
####### PCA graph of variables
# Add cos2 variable to the dataframe
vpg$cos2 <- with(vpg, PC1^2 + PC2^2)
# Add specific labels for variables
vpg$Additional_Label[vpg$Variable %in%
c("IFNy", "IL.6", "CASP1", "IDO1", "TNF")] <-
"*"
vpg$Additional_Label[!vpg$Variable %in%
c("IFNy", "IL.6", "CASP1", "IDO1", "TNF")] <-
"none"
vpg$Cytokine_response <- as.factor(vpg$Cytokine_response)
vpg$T_activ <- as.factor(vpg$T_activ)
colours_c <- c("none" = "#6a6b6a",
"negative regulation of cytokine production" = "#c26674",
"positive regulation of cytokine production involved in inflammatory response" = "#4bad58",
"positive / negative regulation of cytokine production" = "#53b8c9")
colours_t <- c("positive regulation of T cell activation" = "#5190f5",
"none" = "#6a6b6a",
"negative regulation of T cell activation" = "#af0db5",
"positive / negative regulation of T cell activation" =  "#fab65c")
shapes_t <-  c("positive regulation of T cell activation" = 22,
"none" = 21,
"negative regulation of T cell activation" = 23,
"positive / negative regulation of T cell activation" =  24)
ggplot(vpg, aes(x = PC1, y = PC2, color = T_activ, shape = T_activ)) +
geom_segment(aes(xend = 0, yend = 0), color = "gray50") +
geom_point(aes(size = 2.5, alpha = 0.8, fill = T_activ)) +
scale_shape_manual(values = shapes_t) +
scale_fill_manual(values = colours_t) +
geom_point(data = vpg %>% filter(
Pro_infl == "positive regulation of inflammatory response"),
pch = 21, size = 6, colour = "red") +
coord_equal() +
xlab("PC1") +
ylab("PC2") +
ggtitle("PCA Plot of Variables") +
theme_minimal() +
theme(plot.title = element_text(size = 18),
legend.position = "none") +
geom_label_repel(aes(label = Variable, color = Cytokine_response), size = 3,
box.padding = 0.5, max.overlaps = Inf) +
scale_color_manual(values = colours_c) +
annotate("text", x = 0, y = -0.4, label = "red circles:
positive regulation of inflammatory response",
colour = "red", size = 2.7) +
guides(color = guide_legend(title = "Cytokine Response"),
shape = guide_legend(title = "T Cell Activation"),
fill = guide_legend(title = "T Cell Activation"),
size = "none",
alpha = "none") +
theme(legend.position = c(-0.4, 0.5))
library(ggrepel)
library(dplyr)
library(scales)
library(cowplot)
library(ggthemes)
library(grid)
library(ggplot2)
library(ggpmisc)
library(broom)
library(knitr)
library(kableExtra)
library(webshot)
library(RColorBrewer)
# read the lab data with pca vectors
lab <- read.csv("Data/Data_output/lab_pca.csv")
# change the labels pc1 and pc2 to PC1 / PC2
lab <- lab %>%
dplyr::rename(PC1 = "pc1", PC2 = "pc2")
# read the variance explained by each gene for the pca
vpg <- read.csv("Data/Data_output/variance_contr_gene_lab.csv")
# Change the first column of the variance contribution of variables to the gene
# names
vpg <- vpg %>%
dplyr::rename(Variable = vars, PC1 = Dim.1, PC2 = Dim.2)
# add cos2 to lab
lab <- lab %>% mutate(cos2 = lab$PC1^2 + lab$PC2^2)
# Define color palette
color_palette <- c("E_ferrisi" = "#66C2A5", "uninfected" = "#8DA0CB", "E_falciformis" = "#FC8D62")
# PCA graph of individuals
ggplot(lab, aes(x = PC1, y = PC2, color = infection, shape = infection)) +
geom_hline(yintercept = 0, linetype = "dotted", color = "gray50") +
geom_vline(xintercept = 0, linetype = "dotted", color = "gray50") +
geom_point(size = 3, alpha = 0.8) +
labs(x = "PC1", y = "PC2", title = "PCA graph of individuals",
colour = "Current infection", shape ="Current infection") +
theme_minimal() +
theme(plot.title = element_text(size = 24, face = "bold"),
axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12),
legend.position = "right") +
scale_color_manual(values = color_palette) +
scale_shape_manual(values = c("E_ferrisi" = 17, "uninfected" = 16, "E_falciformis" = 18)) +
guides(color = guide_legend(override.aes = list(size = 4)))
####### PCA graph of variables
# Add cos2 variable to the dataframe
vpg$cos2 <- with(vpg, PC1^2 + PC2^2)
# Add specific labels for variables
vpg$Additional_Label[vpg$Variable %in%
c("IFNy", "IL.6", "CASP1", "IDO1", "TNF")] <-
"*"
vpg$Additional_Label[!vpg$Variable %in%
c("IFNy", "IL.6", "CASP1", "IDO1", "TNF")] <-
"none"
vpg$Cytokine_response <- as.factor(vpg$Cytokine_response)
vpg$T_activ <- as.factor(vpg$T_activ)
colours_c <- c("none" = "#6a6b6a",
"negative regulation of cytokine production" = "#c26674",
"positive regulation of cytokine production involved in inflammatory response" = "#4bad58",
"positive / negative regulation of cytokine production" = "#53b8c9")
colours_t <- c("positive regulation of T cell activation" = "#5190f5",
"none" = "#6a6b6a",
"negative regulation of T cell activation" = "#af0db5",
"positive / negative regulation of T cell activation" =  "#fab65c")
shapes_t <-  c("positive regulation of T cell activation" = 22,
"none" = 21,
"negative regulation of T cell activation" = 23,
"positive / negative regulation of T cell activation" =  24)
ggplot(vpg, aes(x = PC1, y = PC2, color = T_activ, shape = T_activ)) +
geom_segment(aes(xend = 0, yend = 0), color = "gray50") +
geom_point(aes(size = 2.5, alpha = 0.8, fill = T_activ)) +
scale_shape_manual(values = shapes_t) +
scale_fill_manual(values = colours_t) +
geom_point(data = vpg %>% filter(
Pro_infl == "positive regulation of inflammatory response"),
pch = 21, size = 6, colour = "red") +
coord_equal() +
xlab("PC1") +
ylab("PC2") +
ggtitle("PCA Plot of Variables") +
theme_minimal() +
theme(plot.title = element_text(size = 18),
legend.position = "none") +
geom_label_repel(aes(label = Variable, color = Cytokine_response), size = 3,
box.padding = 0.5, max.overlaps = Inf) +
scale_color_manual(values = colours_c) +
annotate("text", x = 0, y = -0.4, label = "red circles:
positive regulation of inflammatory response",
colour = "red", size = 2.7) +
guides(color = guide_legend(title = "Cytokine Response"),
shape = guide_legend(title = "T Cell Activation"),
fill = guide_legend(title = "T Cell Activation"),
size = "none",
alpha = "none") +
theme(legend.position = c(-0.4, 0.5))
library(ggrepel)
library(dplyr)
library(scales)
library(cowplot)
library(ggthemes)
library(grid)
library(ggplot2)
library(ggpmisc)
library(broom)
library(knitr)
library(kableExtra)
library(webshot)
library(RColorBrewer)
# read the lab data with pca vectors
lab <- read.csv("Data/Data_output/lab_pca.csv")
# change the labels pc1 and pc2 to PC1 / PC2
lab <- lab %>%
dplyr::rename(PC1 = "pc1", PC2 = "pc2")
# read the variance explained by each gene for the pca
vpg <- read.csv("Data/Data_output/variance_contr_gene_lab.csv")
# Change the first column of the variance contribution of variables to the gene
# names
vpg <- vpg %>%
dplyr::rename(Variable = vars, PC1 = Dim.1, PC2 = Dim.2)
# add cos2 to lab
lab <- lab %>% mutate(cos2 = lab$PC1^2 + lab$PC2^2)
# Define color palette
color_palette <- c("E_ferrisi" = "#66C2A5", "uninfected" = "#8DA0CB", "E_falciformis" = "#FC8D62")
# PCA graph of individuals
ggplot(lab, aes(x = PC1, y = PC2, color = infection, shape = infection)) +
geom_hline(yintercept = 0, linetype = "dotted", color = "gray50") +
geom_vline(xintercept = 0, linetype = "dotted", color = "gray50") +
geom_point(size = 3, alpha = 0.8) +
labs(x = "PC1", y = "PC2", title = "PCA graph of individuals",
colour = "Current infection", shape ="Current infection") +
theme_minimal() +
theme(plot.title = element_text(size = 24, face = "bold"),
axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12),
legend.position = "right") +
scale_color_manual(values = color_palette) +
scale_shape_manual(values = c("E_ferrisi" = 17, "uninfected" = 16, "E_falciformis" = 18)) +
guides(color = guide_legend(override.aes = list(size = 4)))
# Add cos2 variable to the dataframe
vpg$cos2 <- with(vpg, PC1^2 + PC2^2)
# Add specific labels for variables
vpg$Additional_Label[vpg$Variable %in%
c("IFNy", "IL.6", "CASP1", "IDO1", "TNF")] <-
"*"
vpg$Additional_Label[!vpg$Variable %in%
c("IFNy", "IL.6", "CASP1", "IDO1", "TNF")] <-
"none"
vpg$Cytokine_response <- as.factor(vpg$Cytokine_response)
vpg$T_activ <- as.factor(vpg$T_activ)
colours_c <- c("none" = "#6a6b6a",
"negative regulation of cytokine production" = "#c26674",
"positive regulation of cytokine production involved in inflammatory response" = "#4bad58",
"positive / negative regulation of cytokine production" = "#53b8c9")
colours_t <- c("positive regulation of T cell activation" = "#5190f5",
"none" = "#6a6b6a",
"negative regulation of T cell activation" = "#af0db5",
"positive / negative regulation of T cell activation" =  "#fab65c")
shapes_t <-  c("positive regulation of T cell activation" = 22,
"none" = 21,
"negative regulation of T cell activation" = 23,
"positive / negative regulation of T cell activation" =  24)
ggplot(vpg, aes(x = PC1, y = PC2, color = T_activ, shape = T_activ)) +
geom_segment(aes(xend = 0, yend = 0), color = "gray50") +
geom_point(aes(size = 2.5, alpha = 0.8, fill = T_activ)) +
scale_shape_manual(values = shapes_t) +
scale_fill_manual(values = colours_t) +
geom_point(data = vpg %>% filter(
Pro_infl == "positive regulation of inflammatory response"),
pch = 21, size = 6, colour = "red") +
coord_equal() +
xlab("PC1") +
ylab("PC2") +
ggtitle("PCA Plot of Variables") +
theme_minimal() +
theme(plot.title = element_text(size = 18),
legend.position = "none") +
geom_label_repel(aes(label = Variable, color = Cytokine_response), size = 3,
box.padding = 0.5, max.overlaps = Inf) +
scale_color_manual(values = colours_c) +
annotate("text", x = 0, y = -0.4, label = "red circles:
positive regulation of inflammatory response",
colour = "red", size = 2.7) +
guides(color = guide_legend(title = "Cytokine Response"),
shape = guide_legend(title = "T Cell Activation"),
fill = guide_legend(title = "T Cell Activation"),
size = "none",
alpha = "none") +
theme(legend.position = c(-0.4, 0.5))
#################################################
# Load the required packages
###PC1 PC2 linear regression
# Perform linear regression
# Perform linear regression
model <- lm(WL_max ~ PC1 + PC2, data = lab)
# Generate equation text
eq_text <- paste("WL_max =", round(coef(model)[1], 2),
"+", round(coef(model)[2], 2), "PC1",
"+", round(coef(model)[3], 2), "PC2")
# Calculate R-squared
predicted <- predict(model)
r_squared <- summary(model)$r.squared
r_squared_text <- paste("R-squared =", round(r_squared, 2))
# Plot the data with the equation and R-squared
ggplot(lab, aes(x = predicted, y = WL_max)) +
geom_point(color = "#336699", size = 3, alpha = 0.7) +
geom_smooth(method = "lm", formula = y ~ x, se = TRUE, color = "#990000",
size = 0.8) +
labs(x = "Predicted", y = "Observed") +
ggtitle("PC1 and PC2 predicting weight loss") +
theme_minimal() +
theme(plot.title = element_text(size = 14, face = "bold"),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
legend.position = "none") +
annotate("text", x = max(predicted), y = min(lab$WL_max),
label = eq_text, hjust = 1, vjust = -0.2,
color = "black", size = 4, fontface = "bold") +
stat_poly_eq(
formula = y ~ x,
label.x = "right", label.y = "bottom",
label = paste("R^2 =", round(r_squared, 2)),
parse = TRUE,
size = 4,
family = "serif",
fontface = "bold",
aes(label = paste("R^2 =", round(summary(model)$r.squared, 2))),
label.x.npc = 0.70, label.y.npc = 0.4
)
# PCA graph of individuals
ggplot(lab, aes(x = PC1, y = PC2, color = infection, shape = infection)) +
geom_hline(yintercept = 0, linetype = "dotted", color = "gray50") +
geom_vline(xintercept = 0, linetype = "dotted", color = "gray50") +
geom_point(size = 3, alpha = 0.8) +
labs(x = "PC1", y = "PC2", title = "PCA graph of individuals",
colour = "Current infection", shape ="Current infection") +
theme_minimal() +
theme(plot.title = element_text(size = 24, face = "bold"),
axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12),
legend.position = "right") +
scale_color_manual(values = color_palette) +
scale_shape_manual(values = c("E_ferrisi" = 17, "uninfected" = 16, "E_falciformis" = 18)) +
guides(color = guide_legend(override.aes = list(size = 4)))
# PCA graph of individuals
ggplot(lab, aes(x = PC1, y = PC2, color = infection, shape = infection)) +
geom_hline(yintercept = 0, linetype = "dotted", color = "gray50") +
geom_vline(xintercept = 0, linetype = "dotted", color = "gray50") +
geom_point(size = 3, alpha = 0.8) +
labs(x = "PC1", y = "PC2", title = "PCA graph of individuals",
colour = "Current infection", shape ="Current infection") +
theme_minimal() +
theme(plot.title = element_text(size = 24, face = "bold"),
axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12),
legend.position = "right") +
scale_color_manual(values = color_palette) +
scale_shape_manual(values = c("E_ferrisi" = 17, "uninfected" = 16, "E_falciformis" = 18)) +
guides(color = guide_legend(override.aes = list(size = 4)))
# Add cos2 variable to the dataframe
vpg$cos2 <- with(vpg, PC1^2 + PC2^2)
# Add specific labels for variables
vpg$Additional_Label[vpg$Variable %in%
c("IFNy", "IL.6", "CASP1", "IDO1", "TNF")] <-
"*"
vpg$Additional_Label[!vpg$Variable %in%
c("IFNy", "IL.6", "CASP1", "IDO1", "TNF")] <-
"none"
vpg$Cytokine_response <- as.factor(vpg$Cytokine_response)
vpg$T_activ <- as.factor(vpg$T_activ)
colours_c <- c("none" = "#6a6b6a",
"negative regulation of cytokine production" = "#c26674",
"positive regulation of cytokine production involved in inflammatory response" = "#4bad58",
"positive / negative regulation of cytokine production" = "#53b8c9")
colours_t <- c("positive regulation of T cell activation" = "#5190f5",
"none" = "#6a6b6a",
"negative regulation of T cell activation" = "#af0db5",
"positive / negative regulation of T cell activation" =  "#fab65c")
shapes_t <-  c("positive regulation of T cell activation" = 22,
"none" = 21,
"negative regulation of T cell activation" = 23,
"positive / negative regulation of T cell activation" =  24)
ggplot(vpg, aes(x = PC1, y = PC2, color = T_activ, shape = T_activ)) +
geom_segment(aes(xend = 0, yend = 0), color = "gray50") +
geom_point(aes(size = 2.5, alpha = 0.8, fill = T_activ)) +
scale_shape_manual(values = shapes_t) +
scale_fill_manual(values = colours_t) +
geom_point(data = vpg %>% filter(
Pro_infl == "positive regulation of inflammatory response"),
pch = 21, size = 6, colour = "red") +
coord_equal() +
xlab("PC1") +
ylab("PC2") +
ggtitle("PCA Plot of Variables") +
theme_minimal() +
theme(plot.title = element_text(size = 18),
legend.position = "none") +
geom_label_repel(aes(label = Variable, color = Cytokine_response), size = 3,
box.padding = 0.5, max.overlaps = Inf) +
scale_color_manual(values = colours_c) +
annotate("text", x = 0, y = -0.4, label = "red circles:
positive regulation of inflammatory response",
colour = "red", size = 2.7) +
guides(color = guide_legend(title = "Cytokine Response"),
shape = guide_legend(title = "T Cell Activation"),
fill = guide_legend(title = "T Cell Activation"),
size = "none",
alpha = "none") +
theme(legend.position = c(-0.4, 0.5))
