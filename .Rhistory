theme_minimal() -> plotA
plotA
ggsave(filename = "figures/IRGM1_SOCS1_MUC2_IL13.jpeg", plot = plotA,
width = 10, height = 5, dpi = 300)
# Create the bar plot using ggplot2
ggplot(bar_data, aes(x = reorder(GO_Term, p_value), y = p_value, fill = p_value)) +
geom_segment(aes(xend = GO_Term, yend = 0), color = "mediumvioletred", size = 1.5) +
geom_point(size = 3, shape = 19, color = "mediumvioletred", fill = "white") +
coord_flip() +
labs(x = "Enriched GO Terms", y = "-log10(p-value)",
title = "Gene Ontology Enrichment Analysis, IRGM1, SOCS1, MUC2") +
theme_minimal() -> plotA
plotA
ggsave(filename = "figures/IRGM1_SOCS1_MUC2_IL13.jpeg", plot = plotA,
width = 10, height = 5, dpi = 300)
ggsave(filename = "figures/IRGM1_SOCS1_MUC2.jpeg", plot = plotA,
width = 10, height = 5, dpi = 300)
# Create a data frame for the bar plot
bar_data <- data.frame(GO_Term = sorted_terms[1:10,], p_value = -log10(p_values[1:10]))
# Sort the data frame in ascending order
bar_data <- bar_data[order(bar_data$p_value), ]
# Create a data frame for the bar plot
bar_data <- data.frame(GO_Term = sorted_terms[1:15,], p_value = -log10(p_values[1:15]))
View(bar_data)
# Sort the data frame in ascending order
bar_data <- bar_data[order(bar_data$p_value), ]
# Create the bar plot using ggplot2
ggplot(bar_data, aes(x = reorder(GO_Term, p_value), y = p_value, fill = p_value)) +
geom_segment(aes(xend = GO_Term, yend = 0), color = "mediumvioletred", size = 1.5) +
geom_point(size = 3, shape = 19, color = "mediumvioletred", fill = "white") +
coord_flip() +
labs(x = "Enriched GO Terms", y = "-log10(p-value)",
title = "Gene Ontology Enrichment Analysis, IRGM1, SOCS1, MUC2") +
theme_minimal() -> plotA
plotA
# Create a data frame for the bar plot
bar_data <- data.frame(GO_Term = sorted_terms[1:10,], p_value = -log10(p_values[1:10]))
# Sort the data frame in ascending order
bar_data <- bar_data[order(bar_data$p_value), ]
# Create the bar plot using ggplot2
ggplot(bar_data, aes(x = reorder(GO_Term, p_value), y = p_value, fill = p_value)) +
geom_segment(aes(xend = GO_Term, yend = 0), color = "mediumvioletred", size = 1.5) +
geom_point(size = 3, shape = 19, color = "mediumvioletred", fill = "white") +
coord_flip() +
labs(x = "Enriched GO Terms", y = "-log10(p-value)",
title = "Gene Ontology Enrichment Analysis, IRGM1, SOCS1, MUC2") +
theme_minimal() -> plotA
plotA
ggsave(filename = "figures/IRGM1_SOCS1_MUC2.jpeg", plot = plotA,
width = 10, height = 5, dpi = 300)
ggsave(filename = "figures/IRGM1_SOCS1_MUC2.jpeg", plot = plotA,
width = 10, height = 5, dpi = 300)
####################  MUC5AC, IL1Rn, MPO
gene_ens <- c("ENSMUSG00000026981", #IL1RN
"ENSMUSG00000009350", #MPO"
"ENSMUSG00000037974") #MUC5AC
# Perform gene ontology enrichment analysis
enrich_result <- enrichGO(gene = gene_ens,
OrgDb = org.Mm.eg.db,
ont = "BP",
keyType = "ENSEMBL")
# View the enrichment result
enrich_result
# Extract the relevant columns from the enrichment table
enriched_terms <- enrich_result$Description
p_values <- enrich_result$p.adjust
gene_ratio <- enrich_result$GeneRatio
# Sort the enriched terms based on p-values
sorted_terms <- as.data.frame(enriched_terms[order(p_values)])
sorted_terms[1:15,]
# Create a data frame for the bar plot
bar_data <- data.frame(GO_Term = sorted_terms[1:10,], p_value = -log10(p_values[1:10]))
# Sort the data frame in ascending order
bar_data <- bar_data[order(bar_data$p_value), ]
# Create the bar plot using ggplot2
ggplot(bar_data, aes(x = reorder(GO_Term, p_value), y = p_value, fill = p_value)) +
geom_segment(aes(xend = GO_Term, yend = 0), color = "mediumvioletred", size = 1.5) +
geom_point(size = 3, shape = 19, color = "mediumvioletred", fill = "white") +
coord_flip() +
labs(x = "Enriched GO Terms", y = "-log10(p-value)",
title = "Gene Ontology Enrichment Analysis,CASP1, MUC5AC, IL1Rn, MPO") +
theme_minimal() -> plotB
# Create the bar plot using ggplot2
ggplot(bar_data, aes(x = reorder(GO_Term, p_value), y = p_value, fill = p_value)) +
geom_segment(aes(xend = GO_Term, yend = 0), color = "mediumvioletred", size = 1.5) +
geom_point(size = 3, shape = 19, color = "mediumvioletred", fill = "white") +
coord_flip() +
labs(x = "Enriched GO Terms", y = "-log10(p-value)",
title = "Gene Ontology Enrichment Analysis, MUC5AC, IL1Rn, MPO") +
theme_minimal() -> plotB
Plot_B
# Create the bar plot using ggplot2
ggplot(bar_data, aes(x = reorder(GO_Term, p_value), y = p_value, fill = p_value)) +
geom_segment(aes(xend = GO_Term, yend = 0), color = "mediumvioletred", size = 1.5) +
geom_point(size = 3, shape = 19, color = "mediumvioletred", fill = "white") +
coord_flip() +
labs(x = "Enriched GO Terms", y = "-log10(p-value)",
title = "Gene Ontology Enrichment Analysis, MUC5AC, IL1Rn, MPO") +
theme_minimal() -> plotB
plotB
sorted_terms[1:40,]
sorted_terms[1:40,]
sorted_terms[1:100,]
c
c
# Sort the enriched terms based on p-values
sorted_terms <- as.data.frame(enriched_terms[order(p_values)])
sorted_terms[1:100,]
View(sorted_terms)
View(sorted_terms)
glimpse(sorted_terms)
sorted_terms <- sorted_terms %>%
filter('enriched_terms[order(p_values)]' ==
c("interleukin-1-mediated signaling pathway",
"negative regulation of cytokine-mediated signaling pathway",
"inflammatory response to antigenic stimulus",
"negative regulation of response to cytokine stimulus",
"acute inflammatory response"))
sorted_terms <- sorted_terms %>%
filter('enriched_terms[order(p_values)]' %in%
"interleukin-1-mediated signaling pathway",
"negative regulation of cytokine-mediated signaling pathway",
"inflammatory response to antigenic stimulus",
"negative regulation of response to cytokine stimulus",
"acute inflammatory response"))
sorted_terms <- sorted_terms %>%
filter('enriched_terms[order(p_values)]' %in%
"interleukin-1-mediated signaling pathway",
"negative regulation of cytokine-mediated signaling pathway",
"inflammatory response to antigenic stimulus",
"negative regulation of response to cytokine stimulus",
"acute inflammatory response")
sorted_terms <- sorted_terms %>%
filter('enriched_terms[order(p_values)]' %in%
c("interleukin-1-mediated signaling pathway",
"negative regulation of cytokine-mediated signaling pathway",
"inflammatory response to antigenic stimulus",
"negative regulation of response to cytokine stimulus",
"acute inflammatory response"))
# Create a data frame for the bar plot
bar_data <- data.frame(GO_Term = sorted_terms[1:10,], p_value = -log10(p_values[1:10]))
# Sort the data frame in ascending order
bar_data <- bar_data[order(bar_data$p_value), ]
View(bar_data)
# Sort the enriched terms based on p-values
sorted_terms <- as.data.frame(enriched_terms[order(p_values)])
glimpse(sorted_terms)
# Define the vector of values for which you want to filter
filter_values <- c("interleukin-1-mediated signaling pathway",
"negative regulation of cytokine-mediated signaling pathway",
"inflammatory response to antigenic stimulus",
"negative regulation of response to cytokine stimulus",
"acute inflammatory response")
# Filter the dataframe based on the column values
filtered_data <- bar_data %>%
filter(`enriched_terms[order(p_values)]` %in% filter_values)
colnames(bar_data)
# Filter the dataframe based on the column values
filtered_data <- sorted_terms %>%
filter(`enriched_terms[order(p_values)]` %in% filter_values)
View(filtered_data)
# Filter the dataframe based on the column values
sorted_terms <- sorted_terms %>%
filter(`enriched_terms[order(p_values)]` %in% filter_values)
# Create a data frame for the bar plot
bar_data <- data.frame(GO_Term = sorted_terms[], p_value = -log10(p_values[]))
# Sort the data frame in ascending order
bar_data <- bar_data[order(bar_data$p_value), ]
# Create a data frame for the bar plot
bar_data <- data.frame(GO_Term = sorted_terms[], p_value = -log10(p_values[]))
# Define the vector of values for which you want to filter
sorted_terms <- c("interleukin-1-mediated signaling pathway",
"negative regulation of cytokine-mediated signaling pathway",
"inflammatory response to antigenic stimulus",
"negative regulation of response to cytokine stimulus",
"acute inflammatory response")
# Filter the dataframe based on the column values
filtered_data <- sorted_terms %>%
filter(`enriched_terms[order(p_values)]` %in% filter_values)
# Create a data frame for the bar plot
bar_data <- data.frame(GO_Term = sorted_terms[1:5,], p_value = -log10(p_values[1:5]))
# Sort the enriched terms based on p-values
sorted_terms <- as.data.frame(enriched_terms[order(p_values)])
# Define the vector of values for which you want to filter
sorted_terms <- c("interleukin-1-mediated signaling pathway",
"negative regulation of cytokine-mediated signaling pathway",
"inflammatory response to antigenic stimulus",
"negative regulation of response to cytokine stimulus",
"acute inflammatory response")
# Define the vector of values for which you want to filter
filter_terms <- c("interleukin-1-mediated signaling pathway",
"negative regulation of cytokine-mediated signaling pathway",
"inflammatory response to antigenic stimulus",
"negative regulation of response to cytokine stimulus",
"acute inflammatory response")
####################  MUC5AC, IL1Rn, MPO
gene_ens <- c("ENSMUSG00000026981", #IL1RN
"ENSMUSG00000009350", #MPO"
"ENSMUSG00000037974") #MUC5AC
# Perform gene ontology enrichment analysis
enrich_result <- enrichGO(gene = gene_ens,
OrgDb = org.Mm.eg.db,
ont = "BP",
keyType = "ENSEMBL")
# View the enrichment result
enrich_result
# Extract the relevant columns from the enrichment table
enriched_terms <- enrich_result$Description
p_values <- enrich_result$p.adjust
gene_ratio <- enrich_result$GeneRatio
# Sort the enriched terms based on p-values
sorted_terms <- as.data.frame(enriched_terms[order(p_values)])
# Define the vector of values for which you want to filter
filter_terms <- c("interleukin-1-mediated signaling pathway",
"negative regulation of cytokine-mediated signaling pathway",
"inflammatory response to antigenic stimulus",
"negative regulation of response to cytokine stimulus",
"acute inflammatory response")
# Filter the dataframe based on the column values
sorted_terms <- sorted_terms %>%
filter(`enriched_terms[order(p_values)]` %in% filter_terms)
# Create a data frame for the bar plot
bar_data <- data.frame(GO_Term = sorted_terms[1:5,], p_value = -log10(p_values[1:5]))
# Sort the data frame in ascending order
bar_data <- bar_data[order(bar_data$p_value), ]
# Create the bar plot using ggplot2
ggplot(bar_data, aes(x = reorder(GO_Term, p_value), y = p_value, fill = p_value)) +
geom_segment(aes(xend = GO_Term, yend = 0), color = "mediumvioletred", size = 1.5) +
geom_point(size = 3, shape = 19, color = "mediumvioletred", fill = "white") +
coord_flip() +
labs(x = "Enriched GO Terms", y = "-log10(p-value)",
title = "Gene Ontology Enrichment Analysis, MUC5AC, IL1Rn, MPO") +
theme_minimal() -> plotB
plotB
ggsave(filename = "figures/MUC5AC_IL1Rn_MPO.jpeg", plot = plotB,
width = 10, height = 5, dpi = 300)
################### IRGM1, SOCS1, MUC2
gene_ens <- c("ENSMUSG00000046879", #IRGM1
"ENSMUSG00000038037", #SOCS1
"ENSMUSG00000025515") #MUC2
# Perform gene ontology enrichment analysis
enrich_result <- enrichGO(gene = gene_ens,
OrgDb = org.Mm.eg.db,
ont = "BP",
keyType = "ENSEMBL")
# View the enrichment result
enrich_result
# Extract the relevant columns from the enrichment table
enriched_terms <- enrich_result$Description
p_values <- enrich_result$p.adjust
gene_ratio <- enrich_result$GeneRatio
################### IRGM1, SOCS1, MUC2
gene_ens <- c("ENSMUSG00000046879", #IRGM1
"ENSMUSG00000038037", #SOCS1
"ENSMUSG00000025515") #MUC2
# Perform gene ontology enrichment analysis
enrich_result <- enrichGO(gene = gene_ens,
OrgDb = org.Mm.eg.db,
ont = "BP",
keyType = "ENSEMBL")
# View the enrichment result
enrich_result
# Extract the relevant columns from the enrichment table
enriched_terms <- enrich_result$Description
p_values <- enrich_result$p.adjust
gene_ratio <- enrich_result$GeneRatio
# Sort the enriched terms based on p-values
sorted_terms <- as.data.frame(enriched_terms[order(p_values)])
View(sorted_terms)
sorted_terms[1:10,]
# Create a data frame for the bar plot
bar_data <- data.frame(GO_Term = sorted_terms[1:10,], p_value = -log10(p_values[1:10]))
# Sort the data frame in ascending order
bar_data <- bar_data[order(bar_data$p_value), ]
# Create the bar plot using ggplot2
ggplot(bar_data, aes(x = reorder(GO_Term, p_value), y = p_value, fill = p_value)) +
geom_segment(aes(xend = GO_Term, yend = 0), color = "mediumvioletred", size = 1.5) +
geom_point(size = 3, shape = 19, color = "mediumvioletred", fill = "white") +
coord_flip() +
labs(x = "Enriched GO Terms", y = "-log10(p-value)",
title = "Gene Ontology Enrichment Analysis, IRGM1, SOCS1, MUC2") +
theme_minimal() -> plotA
plotA
ggsave(filename = "figures/IRGM1_SOCS1_MUC2.jpeg", plot = plotA,
width = 10, height = 5, dpi = 300)
####################  MUC5AC, IL1Rn, MPO
gene_ens <- c("ENSMUSG00000026981", #IL1RN
"ENSMUSG00000009350", #MPO"
"ENSMUSG00000037974") #MUC5AC
# Perform gene ontology enrichment analysis
enrich_result <- enrichGO(gene = gene_ens,
OrgDb = org.Mm.eg.db,
ont = "BP",
keyType = "ENSEMBL")
# View the enrichment result
enrich_result
# Extract the relevant columns from the enrichment table
enriched_terms <- enrich_result$Description
p_values <- enrich_result$p.adjust
gene_ratio <- enrich_result$GeneRatio
# Sort the enriched terms based on p-values
sorted_terms <- as.data.frame(enriched_terms[order(p_values)])
# Define the vector of values for which you want to filter
filter_terms <- c("interleukin-1-mediated signaling pathway",
"negative regulation of cytokine-mediated signaling pathway",
"inflammatory response to antigenic stimulus",
"negative regulation of response to cytokine stimulus",
"acute inflammatory response")
# Filter the dataframe based on the column values
sorted_terms <- sorted_terms %>%
filter(`enriched_terms[order(p_values)]` %in% filter_terms)
# Create a data frame for the bar plot
bar_data <- data.frame(GO_Term = sorted_terms[1:5,], p_value = -log10(p_values[1:5]))
# Sort the data frame in ascending order
bar_data <- bar_data[order(bar_data$p_value), ]
# Create the bar plot using ggplot2
ggplot(bar_data, aes(x = reorder(GO_Term, p_value), y = p_value, fill = p_value)) +
geom_segment(aes(xend = GO_Term, yend = 0), color = "mediumvioletred", size = 1.5) +
geom_point(size = 3, shape = 19, color = "mediumvioletred", fill = "white") +
coord_flip() +
labs(x = "Enriched GO Terms", y = "-log10(p-value)",
title = "Gene Ontology Enrichment Analysis, MUC5AC, IL1Rn, MPO") +
theme_minimal() -> plotB
plotB
ggsave(filename = "figures/MUC5AC_IL1Rn_MPO.jpeg", plot = plotB,
width = 10, height = 5, dpi = 300)
############################ IL13
gene_ens <-  "ENSMUSG00000020383" #IL13"
# Perform gene ontology enrichment analysis
enrich_result <- enrichGO(gene = gene_ens,
OrgDb = org.Mm.eg.db,
ont = "BP",
keyType = "ENSEMBL")
# View the enrichment result
enrich_result
# Extract the relevant columns from the enrichment table
enriched_terms <- enrich_result$Description
p_values <- enrich_result$p.adjust
gene_ratio <- enrich_result$GeneRatio
# Sort the enriched terms based on p-values
sorted_terms <- as.data.frame(enriched_terms[order(p_values)])
sorted_terms[1:50,]
# Sort the enriched terms based on p-values
sorted_terms <- as.data.frame(enriched_terms[order(p_values)])
View(sorted_terms)
############################ IL13
gene_ens <-  "ENSMUSG00000020383" #IL13"
# Perform gene ontology enrichment analysis
enrich_result <- enrichGO(gene = gene_ens,
OrgDb = org.Mm.eg.db,
ont = "BP",
keyType = "ENSEMBL")
# View the enrichment result
enrich_result
# Extract the relevant columns from the enrichment table
enriched_terms <- enrich_result$Description
p_values <- enrich_result$p.adjust
gene_ratio <- enrich_result$GeneRatio
# Sort the enriched terms based on p-values
sorted_terms <- as.data.frame(enriched_terms[order(p_values)])
# Define the vector of values for which you want to filter
filter_terms <- c("negative regulation of cytokine production",
"cell activation involved in immune response",
"regulation of inflammatory response",
"positive regulation of leukocyte activation")
# Filter the dataframe based on the column values
sorted_terms <- sorted_terms %>%
filter(`enriched_terms[order(p_values)]` %in% filter_terms)
# Create a data frame for the bar plot
bar_data <- data.frame(GO_Term = sorted_terms[1:35,], p_value = -log10(p_values[1:35]))
# Sort the data frame in ascending order
bar_data <- bar_data[order(bar_data$p_value), ]
# Create the bar plot using ggplot2
ggplot(bar_data, aes(x = GO_Term, y = p_value, fill = p_value)) +
geom_segment(aes(xend = GO_Term, yend = 0), color = "mediumvioletred", size = 1.5) +
geom_point(size = 3, shape = 19, color = "mediumvioletred", fill = "white") +
coord_flip() +
labs(x = "Enriched GO Terms", y = "-log10(p-value)",
title = "Gene Ontology Enrichment Analysis, ILRN") +
theme_minimal()
# Create a data frame for the bar plot
bar_data <- data.frame(GO_Term = sorted_terms[1:4,], p_value = -log10(p_values[1:4]))
# Sort the data frame in ascending order
bar_data <- bar_data[order(bar_data$p_value), ]
# Create the bar plot using ggplot2
ggplot(bar_data, aes(x = GO_Term, y = p_value, fill = p_value)) +
geom_segment(aes(xend = GO_Term, yend = 0), color = "mediumvioletred", size = 1.5) +
geom_point(size = 3, shape = 19, color = "mediumvioletred", fill = "white") +
coord_flip() +
labs(x = "Enriched GO Terms", y = "-log10(p-value)",
title = "Gene Ontology Enrichment Analysis, ILRN") +
theme_minimal()
# Create the bar plot using ggplot2
ggplot(bar_data, aes(x = GO_Term, y = p_value, fill = p_value)) +
geom_segment(aes(xend = GO_Term, yend = 0), color = "mediumvioletred", size = 1.5) +
geom_point(size = 3, shape = 19, color = "mediumvioletred", fill = "white") +
coord_flip() +
labs(x = "Enriched GO Terms", y = "-log10(p-value)",
title = "Gene Ontology Enrichment Analysis, IL-13") +
theme_minimal()
ggsave(filename = "figures/IL13.jpeg", plot = plotB,
width = 10, height = 5, dpi = 300)
# Create the bar plot using ggplot2
ggplot(bar_data, aes(x = GO_Term, y = p_value, fill = p_value)) +
geom_segment(aes(xend = GO_Term, yend = 0), color = "mediumvioletred", size = 1.5) +
geom_point(size = 3, shape = 19, color = "mediumvioletred", fill = "white") +
coord_flip() +
labs(x = "Enriched GO Terms", y = "-log10(p-value)",
title = "Gene Ontology Enrichment Analysis, IL-13") +
theme_minimal() -> plotC
ggsave(filename = "figures/IL13.jpeg", plot = plotC,
width = 10, height = 5, dpi = 300)
################## TICAM1, NCR1, PRF1, CXCR3, RETNLB, IL.6, CXCL9, CASP1, MYD88, TNF
gene_ens <-  c("ENSMUSG00000047123", #TICAM1
"ENSMUSG00000062524", #NCR1
"ENSMUSG00000037202.7", #PRF1
"ENSMUSG00000050232", #CXCR3"
"ENSMUSG00000022650", #RETNLB
"ENSMUSG00000025746", #IL6
"ENSMUSG00000029417", #CXCL9
"ENSMUSG00000025888", #CASP1
"ENSMUSG00000032508", #MYD88
"ENSMUSG00000024401") #TNF
# Perform gene ontology enrichment analysis
enrich_result <- enrichGO(gene = gene_ens,
OrgDb = org.Mm.eg.db,
ont = "BP",
keyType = "ENSEMBL")
# View the enrichment result
enrich_result
# Extract the relevant columns from the enrichment table
enriched_terms <- enrich_result$Description
p_values <- enrich_result$p.adjust
gene_ratio <- enrich_result$GeneRatio
# Sort the enriched terms based on p-values
sorted_terms <- as.data.frame(enriched_terms[order(p_values)])
sorted_terms[1:50,]
View(sorted_terms)
# Create a data frame for the bar plot
bar_data <- data.frame(GO_Term = sorted_terms[1:35,], p_value = -log10(p_values[1:35]))
# Sort the data frame in ascending order
bar_data <- bar_data[order(bar_data$p_value), ]
# Create the bar plot using ggplot2
ggplot(bar_data, aes(x = GO_Term, y = p_value, fill = p_value)) +
geom_segment(aes(xend = GO_Term, yend = 0), color = "mediumvioletred", size = 1.5) +
geom_point(size = 3, shape = 19, color = "mediumvioletred", fill = "white") +
coord_flip() +
labs(x = "Enriched GO Terms", y = "-log10(p-value)",
title = "Gene Ontology Enrichment Analysis: MPO, IFNG, CXCL9, TNF") +
theme_minimal()
# Create the bar plot using ggplot2
ggplot(bar_data, aes(x = GO_Term, y = p_value, fill = p_value)) +
geom_segment(aes(xend = GO_Term, yend = 0), color = "mediumvioletred", size = 1.5) +
geom_point(size = 3, shape = 19, color = "mediumvioletred", fill = "white") +
coord_flip() +
labs(x = "Enriched GO Terms", y = "-log10(p-value)",
title = "Gene Ontology Enrichment Analysis:
TICAM1, NCR1, PRF1, CXCR3, RETNLB, IL.6, CXCL9, CASP1, MYD88, TNF") +
theme_minimal()
# Create the bar plot using ggplot2
ggplot(bar_data, aes(x = reorder(GO_Term, p_value), y = p_value, fill = p_value)) +
geom_segment(aes(xend = GO_Term, yend = 0), color = "mediumvioletred", size = 1.5) +
geom_point(size = 3, shape = 19, color = "mediumvioletred", fill = "white") +
coord_flip() +
labs(x = "Enriched GO Terms", y = "-log10(p-value)",
title = "Gene Ontology Enrichment Analysis:
TICAM1, NCR1, PRF1, CXCR3, RETNLB, IL.6, CXCL9, CASP1, MYD88, TNF") +
theme_minimal()
# Create a data frame for the bar plot
bar_data <- data.frame(GO_Term = sorted_terms[1:15,], p_value = -log10(p_values[1:15]))
# Sort the data frame in ascending order
bar_data <- bar_data[order(bar_data$p_value), ]
# Create the bar plot using ggplot2
ggplot(bar_data, aes(x = reorder(GO_Term, p_value), y = p_value, fill = p_value)) +
geom_segment(aes(xend = GO_Term, yend = 0), color = "mediumvioletred", size = 1.5) +
geom_point(size = 3, shape = 19, color = "mediumvioletred", fill = "white") +
coord_flip() +
labs(x = "Enriched GO Terms", y = "-log10(p-value)",
title = "Gene Ontology Enrichment Analysis:
TICAM1, NCR1, PRF1, CXCR3, RETNLB, IL.6, CXCL9, CASP1, MYD88, TNF") +
theme_minimal()
# Create the bar plot using ggplot2
ggplot(bar_data, aes(x = reorder(GO_Term, p_value), y = p_value, fill = p_value)) +
geom_segment(aes(xend = GO_Term, yend = 0), color = "mediumvioletred", size = 1.5) +
geom_point(size = 3, shape = 19, color = "mediumvioletred", fill = "white") +
coord_flip() +
labs(x = "Enriched GO Terms", y = "-log10(p-value)",
title = "Gene Ontology Enrichment Analysis:
TICAM1, NCR1, PRF1, CXCR3, RETNLB, IL.6, CXCL9, CASP1, MYD88, TNF") +
theme_minimal() -> plotD
source("~/GitHub/Article_predicting_WL/R/Scripts/2.Lab_pca_linear_models.R")
coord_flip() +
labs(x = "Enriched GO Terms", y = "-log10(p-value)",
title = "Gene Ontology Enrichment Analysis:
TICAM1, NCR1, PRF1, CXCR3, RETNLB, IL.6, CXCL9, CASP1, MYD88, TNF") +
theme_minimal() -> plotD
# Create the bar plot using ggplot2
ggplot(bar_data, aes(x = reorder(GO_Term, p_value), y = p_value, fill = p_value)) +
geom_segment(aes(xend = GO_Term, yend = 0), color = "mediumvioletred", size = 1.5) +
geom_point(size = 3, shape = 19, color = "mediumvioletred", fill = "white") +
coord_flip() +
labs(x = "Enriched GO Terms", y = "-log10(p-value)",
title = "Gene Ontology Enrichment Analysis:
TICAM1, NCR1, PRF1, CXCR3, RETNLB, IL.6, CXCL9, CASP1, MYD88, TNF") +
theme_minimal() -> plotD
ggsave(filename = "figures/most_immune_genes.jpeg", plot = plotD,
width = 10, height = 5, dpi = 300)
## save the variance contribution of each gene
##save the normalized data
write.csv(pca_var, "Data/Data_output/variance_contr_gene_lab.csv", row.names = TRUE)
# save the lab data frame for figures
write.csv(lab, "Data/Data_output/lab_pca.csv", row.names = FALSE)
