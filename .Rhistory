Field_parasite$current_infection <- as.factor(Field_parasite$current_infection)
#The predict() function in R is used to predict the values based on the input data.
predictions_parasite <- predict(predict_parasite, Field_parasite)
# assign test.data to a new object, so that we can make changes
result_parasite <- Field_parasite
#add the new variable of predictions to the result object
result_parasite <- cbind(result_parasite, predictions_parasite)
## ---------------------------------------------------------------------------------------------------
conf_matrix_parasite <-
confusionMatrix(
result_parasite$predictions_parasite,
reference = result_parasite$current_infection)
print(conf_matrix_parasite)
conf_matrix_parasite$table
plt <- as.data.frame(conf_matrix_parasite$table)
plt$Prediction <- factor(plt$Prediction, levels=rev(levels(plt$Prediction)))
ggplot(plt, aes(x = Prediction, y = reorder(Reference, desc(Reference)))) +
geom_tile(aes(fill = Freq), colour = "white") +
geom_text(aes(label = sprintf("%d", Freq)), vjust = 1) +
scale_fill_gradient(low = "white", high = "Steelblue")  +
labs(x = 'Predicted', y = 'Actual', fill = 'Number of observations',
title = 'Confusion Matrix') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) -> confusion_plot
confusion_plot
ggsave(filename = "figures/confusion_matrix_predicting_ferrisi_field.jpeg",
plot = confusion_plot, width = 6, height = 4, dpi = 1000)
## ---------------------------------------------------------------------------------------------------
model_MC <- readRDS("R/Models/predict_MC_Eimeria.rds")
set.seed(597)
Field_mc <- Field %>%
dplyr::select(all_of(Genes_v), MC.Eimeria) %>%
dplyr::filter(!MC.Eimeria == "NA")
Field_mc$MC.Eimeria <- as.factor(Field_mc$MC.Eimeria)
#The predict() function in R is used to predict the values based on the input
# data.
predictions_MC <- predict(model_MC, Field_mc)
#add the new variable of predictions to the result object
result_MC <- cbind(Field_mc, predictions_MC)
## ---------------------------------------------------------------------------------------------------
conf_matrix_MC <-
confusionMatrix(result_MC$predictions_MC, reference = result_MC$MC.Eimeria)
print(conf_matrix_MC)
conf_matrix_MC$table
plt <- as.data.frame(conf_matrix_MC$table)
plt$Prediction <- factor(plt$Prediction, levels=rev(levels(plt$Prediction)))
ggplot(plt, aes(x = Prediction, y =  Reference, fill= Freq)) +
geom_tile() + geom_text(aes(label=Freq)) +
scale_fill_gradient(low="white", high="darkturquoise") +
labs(x = "Predictions",y = "Reference")
## ---------------------------------------------------------------------------------------------------
Field_tol <- Field %>%
mutate(tolerance = predicted_WL / delta_ct_cewe_MminusE)
Field_tol <- Field_tol %>%
filter(!is.na(tolerance), MC.Eimeria == TRUE)
summary(Field_tol$tolerance)
Field_tol <- Field_tol %>%
filter(tolerance > -5, tolerance < 30)
summary(Field_tol$tolerance)
hist(Field_tol$tolerance)
Field_tol %>%
ggplot(aes(tolerance)) +
geom_histogram()
parasiteLoad::getParamBounds("normal", data = Field_tol, response = "tolerance")
x <- Field_tol$tolerance
# Define function to be used to test, get the log lik and aic
tryDistrib <- function(x, distrib){
# deals with fitdistr error:
fit <-
tryCatch(MASS::fitdistr(x, distrib), error=function(err) "fit failed")
return(list(fit = fit,
loglik = tryCatch(fit$loglik, error=function(err) "no loglik computed"),
AIC = tryCatch(fit$aic, error=function(err) "no aic computed")))
}
findGoodDist <- function(x, distribs, distribs2){
l =lapply(distribs, function(i) tryDistrib(x, i))
names(l) <- distribs
print(l)
listDistr <- lapply(distribs2, function(i){
if (i %in% "t"){
fitdistrplus::fitdist(x, i, start = list(df =2))
} else {
fitdistrplus::fitdist(x,i)
}}
)
par(mfrow=c(2,2))
denscomp(listDistr, legendtext=distribs2)
cdfcomp(listDistr, legendtext=distribs2)
qqcomp(listDistr, legendtext=distribs2)
ppcomp(listDistr, legendtext=distribs2)
par(mfrow=c(1,1))
}
tryDistrib(x, "normal") #-208.0489
tryDistrib(x, "binomial")
tryDistrib(x, "student")
tryDistrib(x, "weibull")
tryDistrib(x, "weibullshifted")
################## hybrid effect
Field <- Field %>%
mutate(HE = 2*HI*(1-HI), #linearize HI
tolerance = predicted_WL / delta_ct_cewe_MminusE)
i <- Field %>%
filter(Sex == "M") %>%
drop_na(tolerance)
cor(i$HI, i$tolerance, method = "spearman")
cor(i$HI, i$predicted_WL, method = "spearman")
i <- Field %>%
filter(Sex == "F") %>%
drop_na(tolerance)
cor(i$HI, i$tolerance, method = "spearman")
cor(i$HI, i$predicted_WL, method = "spearman")
ggplot(Field, aes(x = HI, HE)) +
geom_point() +
geom_line()
ggplot(Field, aes(x = HE, predicted_WL, color = Sex)) +
geom_smooth(method = lm, se = TRUE)
ggplot(Field, aes(x = HE, tolerance, color = Sex)) +
geom_jitter() +
geom_smooth(method = lm, se = TRUE)
ggplot(Field, aes(x = HE, OPG)) +
geom_point() +
geom_line()
model <- lm(formula = predicted_WL ~ HE * Sex, data = Field)
summary(model)
df <- Field %>%
filter(MC.Eimeria == TRUE)
###########################################################
#########################################################
model_tolerance <- lm(predicted_WL ~ delta_ct_cewe_MminusE,
data = df)
summary(model_tolerance)
model <- lm(tolerance ~ HI + HE * Sex, df)
summary(model)
######################################################################
Field_asp <- Field %>%
drop_na(Aspiculuris_sp) %>%
filter(Aspiculuris_sp != 0) %>%
mutate(tolerance = predicted_WL / Aspiculuris_sp) %>%
drop_na(tolerance)
model <- lm(tolerance ~ Aspiculuris_sp, data = Field_asp)
summary(model)
model_tolerance <- lm(predicted_WL ~ delta_ct_cewe_MminusE,
data = df)
summary(model_tolerance)
model <- lm(tolerance ~ HI + HE * Sex, df)
summary(model)
####################################################################
Field_asp <- Field %>%
drop_na(Aspiculuris_sp) %>%
filter(Aspiculuris_sp != 0) %>%
mutate(tolerance = predicted_WL / Aspiculuris_sp) %>%
drop_na(tolerance)
model <- lm(tolerance ~ Aspiculuris_sp, data = Field_asp)
summary(model)
#########################################################################
df <- Field %>%
filter(eimeriaSpecies == "E_falciformis")
model_tolerance <- lm(predicted_WL ~ delta_ct_cewe_MminusE,
data = df)
summary(model_tolerance)
#################################
df <- Field %>%
filter(eimeriaSpecies == "E_ferrisi")
model_tolerance <- lm(predicted_WL ~ delta_ct_cewe_MminusE,
data = df)
summary(model_tolerance)
#################
df <- Field %>%
filter(eimeriaSpecies == "E_falciformis")
model_tolerance <- lm(predicted_WL ~ delta_ct_cewe_MminusE,
data = df)
summary(model_tolerance)
#################################
df <- Field %>%
drop_na(ILWE_Crypto_Ct) %>%
filter(ILWE_Crypto_Ct != 0) %>%
mutate(tolerance = predicted_WL / -ILWE_Crypto_Ct) %>%
drop_na(tolerance)
model_tolerance <- lm(predicted_WL ~ ILWE_Crypto_Ct,
data = df)
summary(model_tolerance)
###################################
df <- Field %>%
drop_na(Syphacia_sp) %>%
filter(Syphacia_sp != 0) %>%
mutate(tolerance = predicted_WL / Syphacia_sp) %>%
drop_na(tolerance)
model_tolerance <- lm(predicted_WL ~ Syphacia_sp,
data = df)
summary(model_tolerance)
#####################################
###################################
df <- Field %>%
drop_na(Heterakis_sp) %>%
filter(Heterakis_sp != 0) %>%
mutate(tolerance = predicted_WL / Heterakis_sp) %>%
drop_na(tolerance)
model_tolerance <- lm(predicted_WL ~ Heterakis_sp,
data = df)
summary(model_tolerance)
################################
df <- Field %>%
drop_na(Trichuris_muris) %>%
filter(Trichuris_muris != 0) %>%
mutate(tolerance = predicted_WL / Trichuris_muris) %>%
drop_na(tolerance)
model_tolerance <- lm(predicted_WL ~ Trichuris_muris,
data = df)
summary(model_tolerance)
##################################################################
#### Testing multiple parasites
model <- lm(predicted_WL ~ delta_ct_cewe_MminusE + Aspiculuris_sp +
Syphacia_sp + ILWE_Crypto_Ct, Field)
summary(model)
model <- lm(predicted_WL ~ MC.Eimeria, Field)
summary(model)
#######################################
model1 <- lm(predicted_WL ~ MC.Eimeria * HE, Field)
summary(model1)
model1 <- lm(predicted_WL ~ MC.Eimeria +
HI + HE + Aspiculuris_sp + Syphacia_sp, Field)
summary(model1)
model2 <- lm(predicted_WL ~ MC.Eimeria +
HI + HE + Aspiculuris_sp +
Syphacia_sp, Field)
summary(model2)
model <- lm(predicted_WL ~ MC.Eimeria +
HI + HE + Aspiculuris_sp +
Syphacia_sp, Field)
summary(model)
model <- lm(predicted_WL ~ MC.Eimeria *delta_ct_cewe_MminusE * HE +
HI + HE, Field)
summary(model)
##
Field_par <- Field %>%
mutate(
infected_Aspiculuris = Aspiculuris_sp != 0,
infected_syphasia = Syphacia_sp != 0,
infected_crypto = ILWE_Crypto_Ct != 0
)
Field_par <- Field_par %>%
mutate(
infected_Aspiculuris = as.factor(infected_Aspiculuris),
infected_syphasia = as.factor(infected_syphasia),
infected_crypto = as.factor(infected_crypto)
)
model <- lm(predicted_WL ~ MC.Eimeria + infected_Aspiculuris + HI + HE +
Aspiculuris_sp + infected_syphasia + infected_crypto, data = Field_par)
summary(model)
plot_summs(model)
model <- lm(predicted_WL ~ MC.Eimeria + infected_Aspiculuris + HI + HE
+ infected_syphasia + infected_crypto, data = Field_par)
summary(model)
plot_summs(model)
##################################################################
#### Testing multiple parasites
model <- lm(predicted_WL ~ delta_ct_cewe_MminusE + Aspiculuris_sp +
Syphacia_sp + ILWE_Crypto_Ct, Field)
summary(model)
model <- lm(predicted_WL ~ MC.Eimeria, Field)
summary(model)
##################################################################
model_multiple <- lm(predicted_WL ~ MC.Eimeria + infected_Aspiculuris + HI + HE
+ infected_syphasia + infected_crypto, data = Field_par)
summary(model_multiple)
plot_summs(model_multiple)
##################################################################
model_1 <- lm(predicted_WL ~ MC.Eimeria + infected_Aspiculuris + HI + HE
+ infected_syphasia + infected_crypto, data = Field_par)
summary(model_1)
plot_summs(model_1)
plot_summs(model)
#### Testing multiple parasites
model <- lm(predicted_WL ~ delta_ct_cewe_MminusE + Aspiculuris_sp +
Syphacia_sp + ILWE_Crypto_Ct, Field)
summary(model)
plot_summs(model)
##### Only mc eimeria
model2 <- lm(predicted_WL ~ MC.Eimeria, Field)
summary(model2)
plot_summs(model2)
##################################################################
model1 <- lm(predicted_WL ~ MC.Eimeria + infected_Aspiculuris + HI + HE
+ infected_syphasia + infected_crypto, data = Field_par)
summary(model1)
plot_summs(model1)
##### Only mc eimeria
model2 <- lm(predicted_WL ~ MC.Eimeria, Field)
summary(model2)
plot_summs(model2)
plot_summs(model_1)
plot_summs(model1, model2)
#######################################
model1 <- lm(predicted_WL ~ MC.Eimeria * HE, Field)
summary(model1)
plot_summs(model2)
#######################################
model2 <- lm(predicted_WL ~ MC.Eimeria * HE, Field)
summary(model2)
plot_summs(model2)
model1 <- lm(predicted_WL ~ MC.Eimeria +
HI + HE + Aspiculuris_sp + Syphacia_sp, Field)
summary(model1)
model2 <- lm(predicted_WL ~ MC.Eimeria +
HI + HE + Aspiculuris_sp +
Syphacia_sp, Field)
summary(model2)
model <- lm(predicted_WL ~ MC.Eimeria +
HI + HE + Aspiculuris_sp +
Syphacia_sp, Field)
summary(model)
plot_summs(model1)
#######################################
model2 <- lm(predicted_WL ~ MC.Eimeria * HE, Field)
summary(model2)
plot_summs(model2)
## hybrid index
model3 <- lm(predicted_WL ~ MC.Eimeria *delta_ct_cewe_MminusE * HE +
HI + HE, Field)
summary(model3)
plot_summs(model3)
## hybrid index + infectopm
model4 <- lm(predicted_WL ~ HI*HE +
HI + HE, Field)
summary(model4)
plot_summs(model4)
## hybrid index + infectopm
model4 <- lm(predicted_WL ~ HI*HE*Sex + HI*Sex + HE*Sex, Field)
summary(model4)
plot_summs(model4)
## hybrid index + infectopm
model4 <- lm(predicted_WL ~  HI + HE, Field)
summary(model4)
plot_summs(model4)
## hybrid index + infectopm
model4 <- lm(predicted_WL ~  HI + HE*Sex, Field)
summary(model4)
plot_summs(model4)
## hybrid index + infectopm
model4 <- lm(predicted_WL ~  HI + HE, Field)
summary(model4)
plot_summs(model4)
plot_summs(model3)
plot_summs(model3, model4)
plot_summs(model3, model4, plot.distributions = TRUE)
##################################################################
model1 <- lm(predicted_WL ~ MC.Eimeria + infected_Aspiculuris + HI + HE
+ infected_syphasia + infected_crypto, data = Field_par)
summary(model1)
plot_summs(model1)
#######################################
model2 <- lm(predicted_WL ~ MC.Eimeria * HE, Field)
summary(model2)
plot_summs(model2)
##################################################################
model1 <- lm(predicted_WL ~ MC.Eimeria + infected_Aspiculuris + HI + HE
+ infected_syphasia + infected_crypto, data = Field_par)
summary(model1)
plot_summs(model1)
################################
df <- Field %>%
drop_na(Trichuris_muris) %>%
filter(Trichuris_muris != 0) %>%
mutate(tolerance = predicted_WL / Trichuris_muris) %>%
drop_na(tolerance)
model_tolerance <- lm(predicted_WL ~ Trichuris_muris,
data = df)
summary(model_tolerance)
##################################################################
model1 <- lm(predicted_WL ~ MC.Eimeria + infected_Aspiculuris + HI + HE
+ infected_syphasia + infected_crypto, data = Field_par)
summary(model1)
plot_summs(model1)
summary(model1)
##################################################################
model1 <- lm(predicted_WL ~ MC.Eimeria + infected_Aspiculuris + HI + HE
+ infected_syphasia + infected_crypto, data = Field_par)
summary(model1)
plot_summs(model1)
ggsave(filename = "figures/coefficient_plot_model1.jpeg", plot = plot1,
width = 8, height = 6, dpi = 300)
plot_summs(model1) -> plot1
ggsave(filename = "figures/coefficient_plot_model1.jpeg", plot = plot1,
width = 8, height = 6, dpi = 300)
?plot_summs
plot_summs(model1, plot.distributions = TRUE) -> plot1
ggsave(filename = "figures/coefficient_plot_model1.jpeg", plot = plot1,
width = 8, height = 6, dpi = 300)
plot1
plot_summs(model1, plot.distributions = TRUE, robust = TRUE) -> plot1
plot1
plot_summs(model1, plot.distributions = TRUE, robust = TRUE, scale = TRUE) -> plot1
plot1
plot_summs(model1, plot.distributions = TRUE, robust = TRUE, scale = TRUE,
colors = "blue")-> plot1
plot1
plot_summs(model1, plot.distributions = TRUE, robust = TRUE, scale = TRUE,
colors = "Rainbow")-> plot1
plot1
plot_summs(model1, plot.distributions = TRUE, robust = TRUE, scale = TRUE,
colors = "CUD Bright")-> plot1
plot1
plot_summs(model1, plot.distributions = TRUE, robust = TRUE, scale = TRUE,
colors = "darkorange")-> plot1
plot1
ggsave(filename = "figures/coefficient_plot_model1.jpeg", plot = plot1,
width = 8, height = 6, dpi = 300)
#######################################
model2 <- lm(predicted_WL ~ MC.Eimeria * HE, Field)
summary(model2)
plot_summs(model2)
## hybrid index + infectopm
model3 <- lm(predicted_WL ~ MC.Eimeria *delta_ct_cewe_MminusE * HE +
HI + HE, Field)
summary(model3)
plot_summs(model3)
plot_summs(model3, plot.distributions = TRUE, robust = TRUE, scale = TRUE,
colors = "darkorange")
plot_summs(model3, plot.distributions = TRUE, robust = TRUE, scale = TRUE,
colors = "purple")
plot_summs(model3, plot.distributions = TRUE, robust = TRUE, scale = TRUE,
colors = "purple", alpha = 0.5)
darkorange
plot_summs(model3, plot.distributions = TRUE, robust = TRUE, scale = TRUE,
colors = "darkpurple")
plot_summs(model3, plot.distributions = TRUE, robust = TRUE, scale = TRUE,
colors = "darkblue")
plot_summs(model3, plot.distributions = TRUE, robust = TRUE, scale = TRUE,
colors = "darkseagreen")
plot_summs(model3, plot.distributions = TRUE, robust = TRUE, scale = TRUE,
colors = "darkseagreen") -> plot2
plot_summs(model3, plot.distributions = TRUE, robust = TRUE, scale = TRUE,
colors = "darkseagreen") -> plot2
ggsave(filename = "figures/coefficient_plot_model2.jpeg", plot = plot2,
width = 8, height = 6, dpi = 300)
## hybrid index + infectopm
model4 <- lm(predicted_WL ~  HI + HE, Field)
summary(model4)
plot_summs(model4)
plot_summs(model4,  plot.distributions = TRUE, robust = TRUE, scale = TRUE,
colors = "lightpink")
plot_summs(model3, model4, plot.distributions = TRUE)
plot_summs(model3, model4)
plot_summs(model3, model4,  plot.distributions = TRUE, robust = TRUE,
scale = TRUE)
plot_summs(model3, model4,  robust = TRUE,
scale = TRUE)
## hybrid index + infectopm
model4 <- lm(predicted_WL ~  HI + HE, Field)
summary(model4)
plot_summs(model4,  plot.distributions = TRUE, robust = TRUE, scale = TRUE,
colors = "lightpink")
plot_summs(model3, model4,  robust = TRUE,
scale = TRUE)
plot_summs(model3, model4,  robust = TRUE,
scale = TRUE) -> model1_2
plot_summs(model3, model4,  robust = TRUE,
scale = TRUE) -> model1_2
ggsave(filename = "figures/coefficient_plot_model1_2.jpeg", plot = model1_2,
width = 8, height = 6, dpi = 300)
model_mc <- lm(predicted_WL ~ MC.Eimeria, Field)
summary(model_mc)
ggeffect(model_mc)
predictions <- ggpredict(model_mc)
model_mc <- lm(predicted_WL ~ MC.Eimeria, Field)
summary(model_mc)
predictions <- ggpredict(model_mc)
ggpredict(model_mc)
ggpredict(model_mc) %>%
plot()
model_mc <- lm(predicted_WL ~ MC.Eimeria, Field)
summary(model_mc)
ggpredict(model_mc) %>%
plot()
model_mc <- lm(predicted_WL ~ as.character(MC.Eimeria), Field)
summary(model_mc)
ggpredict(model_mc) %>%
plot()
model_mc <- lm(predicted_WL ~ MC.Eimeria, Field)
summary(model_mc)
ggpredict(model_mc) %>%
plot()
## hybrid index + infectopm
model3 <- lm(predicted_WL ~ MC.Eimeria *delta_ct_cewe_MminusE * HE +
HI + HE, Field)
summary(model3)
plot_summs(model3, plot.distributions = TRUE, robust = TRUE, scale = TRUE,
colors = "darkseagreen") -> plot2
ggsave(filename = "figures/coefficient_plot_model2.jpeg", plot = plot2,
width = 8, height = 6, dpi = 300)
ggpredict(model3)
ggpredict(model3) %>%
plot()
## hybrid index + infectopm
Field$MC.Eimeria <- as.factor(Field$MC.Eimeria)
model3 <- lm(predicted_WL ~ MC.Eimeria *delta_ct_cewe_MminusE * HE +
HI + HE, Field)
summary(model3)
plot_summs(model3, plot.distributions = TRUE, robust = TRUE, scale = TRUE,
colors = "darkseagreen") -> plot2
ggsave(filename = "figures/coefficient_plot_model2.jpeg", plot = plot2,
width = 8, height = 6, dpi = 300)
ggpredict(model3) %>%
plot()
ggpredict(model3, terms = c("MC.Eimeria")) %>%
plot()
ggpredict(model3, terms = c("MC.Eimeria", "delta_ct_cewe_MminusE")) %>%
plot()
ggpredict(model3, terms = c("delta_ct_cewe_MminusE", "MC.Eimeria")) %>%
plot()
ggpredict(model3, terms = c("MC.Eimeria", "delta_ct_cewe_MminusE")) %>%
plot()
